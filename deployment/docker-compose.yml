services:
  redis:
    image: redis:7-alpine
    container_name: cc_executor_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  cc_execute:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: cc_execute
    ports:
      - "8001:8000"  # FastAPI for auth/health
      - "8004:8003"  # WebSocket for execution (8004 external, 8003 internal)
    environment:
      LOG_LEVEL: INFO
      PYTHONUNBUFFERED: "1"
      REDIS_URL: redis://redis:6379
      DISABLE_VENV_WRAPPING: "1"  # Disable venv wrapping in Docker
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}  # Pass through from host
    volumes:
      # NOTE: We no longer bind-mount the entire source tree into the container.
      # This avoids accidental override of files packaged in the image (e.g. start_services.py).
      # Mount only writable directories required at runtime.
      # Source code changes require `docker compose build`.

      - ./logs:/app/logs
      - ./data:/app/data
      - ~/.claude:/home/appuser/.claude
    # For Claude Max Plan users, add one of these options:
    # Option 1: Run as your user (recommended)
    # user: "${UID:-1000}:${GID:-1000}"
    # Option 2: Use host network for auth
    # network_mode: host
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  default:
    name: cc_executor_network

volumes:
  redis_data:
    driver: local