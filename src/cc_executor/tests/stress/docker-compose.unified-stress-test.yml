version: '3.8'

# CC-Executor Unified Stress Test Environment
# This compose file runs the stress test executor with the MCP WebSocket service

services:
  # Core MCP WebSocket service
  cc-executor-mcp:
    build: .
    container_name: cc_executor_mcp
    ports:
      - "8003:8003"
    environment:
      - LOG_LEVEL=INFO
      - MAX_BUFFER_SIZE=1048576
      - MAX_BUFFER_LINES=10000
      - ALLOWED_COMMANDS=bash,claude,claude-code,python,node,npm,git,ls,cat,echo,pwd
      # Timeout configurations for stress tests
      - DEFAULT_TIMEOUT=300
      - STALL_TIMEOUT=120  # Increased from 60s for long content
      - REDIS_VARIANCE_THRESHOLD=3
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8003/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      # Mount task definitions and prompts
      - ./tasks:/app/tasks:ro
      - ./prompts:/app/prompts:ro
      # Mount output directory for test results
      - ./stress_test_outputs:/app/outputs
    networks:
      - cc-executor-net

  # Redis for task timing estimates
  redis:
    image: redis:7-alpine
    container_name: cc_executor_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - cc-executor-net

  # Stress test executor container
  stress-test-executor:
    build:
      context: .
      dockerfile: Dockerfile.stress-test
    container_name: cc_executor_stress_test
    environment:
      - WEBSOCKET_URL=ws://cc-executor-mcp:8003/ws/mcp
      - REDIS_URL=redis://redis:6379
      - OUTPUT_DIR=/app/outputs
      - LOG_LEVEL=INFO
      # Test configuration
      - DEFAULT_TIMEOUT=300
      - STALL_TIMEOUT=120
      - VERBOSE=true
    volumes:
      - ./tasks:/app/tasks:ro
      - ./prompts:/app/prompts:ro
      - ./stress_test_outputs:/app/outputs
      # Mount Claude binary and config (for testing)
      - ~/.claude:/root/.claude:ro
      - ~/.nvm:/root/.nvm:ro
    networks:
      - cc-executor-net
    depends_on:
      cc-executor-mcp:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["python", "/app/prompts/unified_stress_test_executor.py", "--all"]

networks:
  cc-executor-net:
    driver: bridge

volumes:
  redis_data: